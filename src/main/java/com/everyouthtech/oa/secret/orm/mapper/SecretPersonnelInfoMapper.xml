<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.everyouthtech.oa.secret.orm.dao.SecretPersonnelInfoMapper">
  <resultMap id="BaseResultMap" type="com.everyouthtech.oa.secret.orm.pojo.SecretPersonnelInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="nation" jdbcType="BIGINT" property="nation" />
    <result column="former_name" jdbcType="VARCHAR" property="formerName" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="marital_status" jdbcType="INTEGER" property="maritalStatus" />
    <result column="birthplace" jdbcType="VARCHAR" property="birthplace" />
    <result column="hometown" jdbcType="VARCHAR" property="hometown" />
    <result column="nationality" jdbcType="BIGINT" property="nationality" />
    <result column="identity_number" jdbcType="VARCHAR" property="identityNumber" />
    <result column="political_status" jdbcType="INTEGER" property="politicalStatus" />
    <result column="join_political_time" jdbcType="TIMESTAMP" property="joinPoliticalTime" />
    <result column="education_level" jdbcType="VARCHAR" property="educationLevel" />
    <result column="education" jdbcType="INTEGER" property="education" />
    <result column="academic_degree" jdbcType="INTEGER" property="academicDegree" />
    <result column="graduated_school" jdbcType="VARCHAR" property="graduatedSchool" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="working_years" jdbcType="INTEGER" property="workingYears" />
    <result column="language" jdbcType="VARCHAR" property="language" />
    <result column="language_familiarity" jdbcType="VARCHAR" property="languageFamiliarity" />
    <result column="registered_residence" jdbcType="VARCHAR" property="registeredResidence" />
    <result column="registered_residence_police_station" jdbcType="VARCHAR" property="registeredResidencePoliceStation" />
    <result column="current_address" jdbcType="VARCHAR" property="currentAddress" />
    <result column="office_location" jdbcType="VARCHAR" property="officeLocation" />
    <result column="contact_number" jdbcType="INTEGER" property="contactNumber" />
    <result column="phone_number" jdbcType="INTEGER" property="phoneNumber" />
    <result column="administrative_position" jdbcType="VARCHAR" property="administrativePosition" />
    <result column="technical_position" jdbcType="VARCHAR" property="technicalPosition" />
    <result column="department_id" jdbcType="BIGINT" property="departmentId" />
    <result column="secret_position" jdbcType="BIGINT" property="secretPosition" />
    <result column="classified_grades" jdbcType="INTEGER" property="classifiedGrades" />
    <result column="employment_type" jdbcType="INTEGER" property="employmentType" />
    <result column="personnel_category" jdbcType="INTEGER" property="personnelCategory" />
    <result column="join_time" jdbcType="TIMESTAMP" property="joinTime" />
    <result column="join_secret_position_time" jdbcType="TIMESTAMP" property="joinSecretPositionTime" />
    <result column="employee_card_number" jdbcType="VARCHAR" property="employeeCardNumber" />
    <result column="confidentiality_allowance" jdbcType="DOUBLE" property="confidentialityAllowance" />
    <result column="personnel_status" jdbcType="INTEGER" property="personnelStatus" />
    <result column="leave_time" jdbcType="TIMESTAMP" property="leaveTime" />
    <result column="declassification_time" jdbcType="TIMESTAMP" property="declassificationTime" />
    <result column="bad_habits" jdbcType="VARCHAR" property="badHabits" />
    <result column="other_situations" jdbcType="VARCHAR" property="otherSituations" />
    <result column="promise" jdbcType="BOOLEAN" property="promise" />
    <result column="promise_time" jdbcType="TIMESTAMP" property="promiseTime" />
    <result column="promise_file_location" jdbcType="VARCHAR" property="promiseFileLocation" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, sex, nation, former_name, birthday, image, marital_status, birthplace, 
    hometown, nationality, identity_number, political_status, join_political_time, education_level, 
    education, academic_degree, graduated_school, major, working_years, language, language_familiarity, 
    registered_residence, registered_residence_police_station, current_address, office_location, 
    contact_number, phone_number, administrative_position, technical_position, department_id, 
    secret_position, classified_grades, employment_type, personnel_category, join_time, 
    join_secret_position_time, employee_card_number, confidentiality_allowance, personnel_status, 
    leave_time, declassification_time, bad_habits, other_situations, promise, promise_time, 
    promise_file_location, remarks, created_time, created_by, update_time, update_by
  </sql>
  <select id="selectByExample" parameterType="com.everyouthtech.oa.secret.orm.pojo.SecretPersonnelInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_secret_personnel_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_secret_personnel_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_secret_personnel_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.everyouthtech.oa.secret.orm.pojo.SecretPersonnelInfoExample">
    delete from t_secret_personnel_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.everyouthtech.oa.secret.orm.pojo.SecretPersonnelInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_secret_personnel_info (name, sex, nation, 
      former_name, birthday, image, 
      marital_status, birthplace, hometown, 
      nationality, identity_number, political_status, 
      join_political_time, education_level, education, 
      academic_degree, graduated_school, major, 
      working_years, language, language_familiarity, 
      registered_residence, registered_residence_police_station, 
      current_address, office_location, contact_number, 
      phone_number, administrative_position, technical_position, 
      department_id, secret_position, classified_grades, 
      employment_type, personnel_category, join_time, 
      join_secret_position_time, employee_card_number, 
      confidentiality_allowance, personnel_status, 
      leave_time, declassification_time, bad_habits, 
      other_situations, promise, promise_time, 
      promise_file_location, remarks, created_time, 
      created_by, update_time, update_by
      )
    values (#{name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{nation,jdbcType=BIGINT}, 
      #{formerName,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, #{image,jdbcType=VARCHAR}, 
      #{maritalStatus,jdbcType=INTEGER}, #{birthplace,jdbcType=VARCHAR}, #{hometown,jdbcType=VARCHAR}, 
      #{nationality,jdbcType=BIGINT}, #{identityNumber,jdbcType=VARCHAR}, #{politicalStatus,jdbcType=INTEGER}, 
      #{joinPoliticalTime,jdbcType=TIMESTAMP}, #{educationLevel,jdbcType=VARCHAR}, #{education,jdbcType=INTEGER}, 
      #{academicDegree,jdbcType=INTEGER}, #{graduatedSchool,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, 
      #{workingYears,jdbcType=INTEGER}, #{language,jdbcType=VARCHAR}, #{languageFamiliarity,jdbcType=VARCHAR}, 
      #{registeredResidence,jdbcType=VARCHAR}, #{registeredResidencePoliceStation,jdbcType=VARCHAR}, 
      #{currentAddress,jdbcType=VARCHAR}, #{officeLocation,jdbcType=VARCHAR}, #{contactNumber,jdbcType=INTEGER}, 
      #{phoneNumber,jdbcType=INTEGER}, #{administrativePosition,jdbcType=VARCHAR}, #{technicalPosition,jdbcType=VARCHAR}, 
      #{departmentId,jdbcType=BIGINT}, #{secretPosition,jdbcType=BIGINT}, #{classifiedGrades,jdbcType=INTEGER}, 
      #{employmentType,jdbcType=INTEGER}, #{personnelCategory,jdbcType=INTEGER}, #{joinTime,jdbcType=TIMESTAMP}, 
      #{joinSecretPositionTime,jdbcType=TIMESTAMP}, #{employeeCardNumber,jdbcType=VARCHAR}, 
      #{confidentialityAllowance,jdbcType=DOUBLE}, #{personnelStatus,jdbcType=INTEGER}, 
      #{leaveTime,jdbcType=TIMESTAMP}, #{declassificationTime,jdbcType=TIMESTAMP}, #{badHabits,jdbcType=VARCHAR}, 
      #{otherSituations,jdbcType=VARCHAR}, #{promise,jdbcType=BOOLEAN}, #{promiseTime,jdbcType=TIMESTAMP}, 
      #{promiseFileLocation,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.everyouthtech.oa.secret.orm.pojo.SecretPersonnelInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_secret_personnel_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="formerName != null">
        former_name,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="maritalStatus != null">
        marital_status,
      </if>
      <if test="birthplace != null">
        birthplace,
      </if>
      <if test="hometown != null">
        hometown,
      </if>
      <if test="nationality != null">
        nationality,
      </if>
      <if test="identityNumber != null">
        identity_number,
      </if>
      <if test="politicalStatus != null">
        political_status,
      </if>
      <if test="joinPoliticalTime != null">
        join_political_time,
      </if>
      <if test="educationLevel != null">
        education_level,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="academicDegree != null">
        academic_degree,
      </if>
      <if test="graduatedSchool != null">
        graduated_school,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="workingYears != null">
        working_years,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="languageFamiliarity != null">
        language_familiarity,
      </if>
      <if test="registeredResidence != null">
        registered_residence,
      </if>
      <if test="registeredResidencePoliceStation != null">
        registered_residence_police_station,
      </if>
      <if test="currentAddress != null">
        current_address,
      </if>
      <if test="officeLocation != null">
        office_location,
      </if>
      <if test="contactNumber != null">
        contact_number,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="administrativePosition != null">
        administrative_position,
      </if>
      <if test="technicalPosition != null">
        technical_position,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="secretPosition != null">
        secret_position,
      </if>
      <if test="classifiedGrades != null">
        classified_grades,
      </if>
      <if test="employmentType != null">
        employment_type,
      </if>
      <if test="personnelCategory != null">
        personnel_category,
      </if>
      <if test="joinTime != null">
        join_time,
      </if>
      <if test="joinSecretPositionTime != null">
        join_secret_position_time,
      </if>
      <if test="employeeCardNumber != null">
        employee_card_number,
      </if>
      <if test="confidentialityAllowance != null">
        confidentiality_allowance,
      </if>
      <if test="personnelStatus != null">
        personnel_status,
      </if>
      <if test="leaveTime != null">
        leave_time,
      </if>
      <if test="declassificationTime != null">
        declassification_time,
      </if>
      <if test="badHabits != null">
        bad_habits,
      </if>
      <if test="otherSituations != null">
        other_situations,
      </if>
      <if test="promise != null">
        promise,
      </if>
      <if test="promiseTime != null">
        promise_time,
      </if>
      <if test="promiseFileLocation != null">
        promise_file_location,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=BIGINT},
      </if>
      <if test="formerName != null">
        #{formerName,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null">
        #{maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="birthplace != null">
        #{birthplace,jdbcType=VARCHAR},
      </if>
      <if test="hometown != null">
        #{hometown,jdbcType=VARCHAR},
      </if>
      <if test="nationality != null">
        #{nationality,jdbcType=BIGINT},
      </if>
      <if test="identityNumber != null">
        #{identityNumber,jdbcType=VARCHAR},
      </if>
      <if test="politicalStatus != null">
        #{politicalStatus,jdbcType=INTEGER},
      </if>
      <if test="joinPoliticalTime != null">
        #{joinPoliticalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="educationLevel != null">
        #{educationLevel,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=INTEGER},
      </if>
      <if test="academicDegree != null">
        #{academicDegree,jdbcType=INTEGER},
      </if>
      <if test="graduatedSchool != null">
        #{graduatedSchool,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="workingYears != null">
        #{workingYears,jdbcType=INTEGER},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="languageFamiliarity != null">
        #{languageFamiliarity,jdbcType=VARCHAR},
      </if>
      <if test="registeredResidence != null">
        #{registeredResidence,jdbcType=VARCHAR},
      </if>
      <if test="registeredResidencePoliceStation != null">
        #{registeredResidencePoliceStation,jdbcType=VARCHAR},
      </if>
      <if test="currentAddress != null">
        #{currentAddress,jdbcType=VARCHAR},
      </if>
      <if test="officeLocation != null">
        #{officeLocation,jdbcType=VARCHAR},
      </if>
      <if test="contactNumber != null">
        #{contactNumber,jdbcType=INTEGER},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=INTEGER},
      </if>
      <if test="administrativePosition != null">
        #{administrativePosition,jdbcType=VARCHAR},
      </if>
      <if test="technicalPosition != null">
        #{technicalPosition,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="secretPosition != null">
        #{secretPosition,jdbcType=BIGINT},
      </if>
      <if test="classifiedGrades != null">
        #{classifiedGrades,jdbcType=INTEGER},
      </if>
      <if test="employmentType != null">
        #{employmentType,jdbcType=INTEGER},
      </if>
      <if test="personnelCategory != null">
        #{personnelCategory,jdbcType=INTEGER},
      </if>
      <if test="joinTime != null">
        #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="joinSecretPositionTime != null">
        #{joinSecretPositionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeCardNumber != null">
        #{employeeCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="confidentialityAllowance != null">
        #{confidentialityAllowance,jdbcType=DOUBLE},
      </if>
      <if test="personnelStatus != null">
        #{personnelStatus,jdbcType=INTEGER},
      </if>
      <if test="leaveTime != null">
        #{leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="declassificationTime != null">
        #{declassificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="badHabits != null">
        #{badHabits,jdbcType=VARCHAR},
      </if>
      <if test="otherSituations != null">
        #{otherSituations,jdbcType=VARCHAR},
      </if>
      <if test="promise != null">
        #{promise,jdbcType=BOOLEAN},
      </if>
      <if test="promiseTime != null">
        #{promiseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="promiseFileLocation != null">
        #{promiseFileLocation,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.everyouthtech.oa.secret.orm.pojo.SecretPersonnelInfoExample" resultType="java.lang.Long">
    select count(*) from t_secret_personnel_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_secret_personnel_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=BIGINT},
      </if>
      <if test="record.formerName != null">
        former_name = #{record.formerName,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.maritalStatus != null">
        marital_status = #{record.maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="record.birthplace != null">
        birthplace = #{record.birthplace,jdbcType=VARCHAR},
      </if>
      <if test="record.hometown != null">
        hometown = #{record.hometown,jdbcType=VARCHAR},
      </if>
      <if test="record.nationality != null">
        nationality = #{record.nationality,jdbcType=BIGINT},
      </if>
      <if test="record.identityNumber != null">
        identity_number = #{record.identityNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.politicalStatus != null">
        political_status = #{record.politicalStatus,jdbcType=INTEGER},
      </if>
      <if test="record.joinPoliticalTime != null">
        join_political_time = #{record.joinPoliticalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.educationLevel != null">
        education_level = #{record.educationLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=INTEGER},
      </if>
      <if test="record.academicDegree != null">
        academic_degree = #{record.academicDegree,jdbcType=INTEGER},
      </if>
      <if test="record.graduatedSchool != null">
        graduated_school = #{record.graduatedSchool,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.workingYears != null">
        working_years = #{record.workingYears,jdbcType=INTEGER},
      </if>
      <if test="record.language != null">
        language = #{record.language,jdbcType=VARCHAR},
      </if>
      <if test="record.languageFamiliarity != null">
        language_familiarity = #{record.languageFamiliarity,jdbcType=VARCHAR},
      </if>
      <if test="record.registeredResidence != null">
        registered_residence = #{record.registeredResidence,jdbcType=VARCHAR},
      </if>
      <if test="record.registeredResidencePoliceStation != null">
        registered_residence_police_station = #{record.registeredResidencePoliceStation,jdbcType=VARCHAR},
      </if>
      <if test="record.currentAddress != null">
        current_address = #{record.currentAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.officeLocation != null">
        office_location = #{record.officeLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.contactNumber != null">
        contact_number = #{record.contactNumber,jdbcType=INTEGER},
      </if>
      <if test="record.phoneNumber != null">
        phone_number = #{record.phoneNumber,jdbcType=INTEGER},
      </if>
      <if test="record.administrativePosition != null">
        administrative_position = #{record.administrativePosition,jdbcType=VARCHAR},
      </if>
      <if test="record.technicalPosition != null">
        technical_position = #{record.technicalPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=BIGINT},
      </if>
      <if test="record.secretPosition != null">
        secret_position = #{record.secretPosition,jdbcType=BIGINT},
      </if>
      <if test="record.classifiedGrades != null">
        classified_grades = #{record.classifiedGrades,jdbcType=INTEGER},
      </if>
      <if test="record.employmentType != null">
        employment_type = #{record.employmentType,jdbcType=INTEGER},
      </if>
      <if test="record.personnelCategory != null">
        personnel_category = #{record.personnelCategory,jdbcType=INTEGER},
      </if>
      <if test="record.joinTime != null">
        join_time = #{record.joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.joinSecretPositionTime != null">
        join_secret_position_time = #{record.joinSecretPositionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.employeeCardNumber != null">
        employee_card_number = #{record.employeeCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.confidentialityAllowance != null">
        confidentiality_allowance = #{record.confidentialityAllowance,jdbcType=DOUBLE},
      </if>
      <if test="record.personnelStatus != null">
        personnel_status = #{record.personnelStatus,jdbcType=INTEGER},
      </if>
      <if test="record.leaveTime != null">
        leave_time = #{record.leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.declassificationTime != null">
        declassification_time = #{record.declassificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.badHabits != null">
        bad_habits = #{record.badHabits,jdbcType=VARCHAR},
      </if>
      <if test="record.otherSituations != null">
        other_situations = #{record.otherSituations,jdbcType=VARCHAR},
      </if>
      <if test="record.promise != null">
        promise = #{record.promise,jdbcType=BOOLEAN},
      </if>
      <if test="record.promiseTime != null">
        promise_time = #{record.promiseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.promiseFileLocation != null">
        promise_file_location = #{record.promiseFileLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_secret_personnel_info
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      nation = #{record.nation,jdbcType=BIGINT},
      former_name = #{record.formerName,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      image = #{record.image,jdbcType=VARCHAR},
      marital_status = #{record.maritalStatus,jdbcType=INTEGER},
      birthplace = #{record.birthplace,jdbcType=VARCHAR},
      hometown = #{record.hometown,jdbcType=VARCHAR},
      nationality = #{record.nationality,jdbcType=BIGINT},
      identity_number = #{record.identityNumber,jdbcType=VARCHAR},
      political_status = #{record.politicalStatus,jdbcType=INTEGER},
      join_political_time = #{record.joinPoliticalTime,jdbcType=TIMESTAMP},
      education_level = #{record.educationLevel,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=INTEGER},
      academic_degree = #{record.academicDegree,jdbcType=INTEGER},
      graduated_school = #{record.graduatedSchool,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      working_years = #{record.workingYears,jdbcType=INTEGER},
      language = #{record.language,jdbcType=VARCHAR},
      language_familiarity = #{record.languageFamiliarity,jdbcType=VARCHAR},
      registered_residence = #{record.registeredResidence,jdbcType=VARCHAR},
      registered_residence_police_station = #{record.registeredResidencePoliceStation,jdbcType=VARCHAR},
      current_address = #{record.currentAddress,jdbcType=VARCHAR},
      office_location = #{record.officeLocation,jdbcType=VARCHAR},
      contact_number = #{record.contactNumber,jdbcType=INTEGER},
      phone_number = #{record.phoneNumber,jdbcType=INTEGER},
      administrative_position = #{record.administrativePosition,jdbcType=VARCHAR},
      technical_position = #{record.technicalPosition,jdbcType=VARCHAR},
      department_id = #{record.departmentId,jdbcType=BIGINT},
      secret_position = #{record.secretPosition,jdbcType=BIGINT},
      classified_grades = #{record.classifiedGrades,jdbcType=INTEGER},
      employment_type = #{record.employmentType,jdbcType=INTEGER},
      personnel_category = #{record.personnelCategory,jdbcType=INTEGER},
      join_time = #{record.joinTime,jdbcType=TIMESTAMP},
      join_secret_position_time = #{record.joinSecretPositionTime,jdbcType=TIMESTAMP},
      employee_card_number = #{record.employeeCardNumber,jdbcType=VARCHAR},
      confidentiality_allowance = #{record.confidentialityAllowance,jdbcType=DOUBLE},
      personnel_status = #{record.personnelStatus,jdbcType=INTEGER},
      leave_time = #{record.leaveTime,jdbcType=TIMESTAMP},
      declassification_time = #{record.declassificationTime,jdbcType=TIMESTAMP},
      bad_habits = #{record.badHabits,jdbcType=VARCHAR},
      other_situations = #{record.otherSituations,jdbcType=VARCHAR},
      promise = #{record.promise,jdbcType=BOOLEAN},
      promise_time = #{record.promiseTime,jdbcType=TIMESTAMP},
      promise_file_location = #{record.promiseFileLocation,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.everyouthtech.oa.secret.orm.pojo.SecretPersonnelInfo">
    update t_secret_personnel_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=BIGINT},
      </if>
      <if test="formerName != null">
        former_name = #{formerName,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null">
        marital_status = #{maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="birthplace != null">
        birthplace = #{birthplace,jdbcType=VARCHAR},
      </if>
      <if test="hometown != null">
        hometown = #{hometown,jdbcType=VARCHAR},
      </if>
      <if test="nationality != null">
        nationality = #{nationality,jdbcType=BIGINT},
      </if>
      <if test="identityNumber != null">
        identity_number = #{identityNumber,jdbcType=VARCHAR},
      </if>
      <if test="politicalStatus != null">
        political_status = #{politicalStatus,jdbcType=INTEGER},
      </if>
      <if test="joinPoliticalTime != null">
        join_political_time = #{joinPoliticalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="educationLevel != null">
        education_level = #{educationLevel,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=INTEGER},
      </if>
      <if test="academicDegree != null">
        academic_degree = #{academicDegree,jdbcType=INTEGER},
      </if>
      <if test="graduatedSchool != null">
        graduated_school = #{graduatedSchool,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="workingYears != null">
        working_years = #{workingYears,jdbcType=INTEGER},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=VARCHAR},
      </if>
      <if test="languageFamiliarity != null">
        language_familiarity = #{languageFamiliarity,jdbcType=VARCHAR},
      </if>
      <if test="registeredResidence != null">
        registered_residence = #{registeredResidence,jdbcType=VARCHAR},
      </if>
      <if test="registeredResidencePoliceStation != null">
        registered_residence_police_station = #{registeredResidencePoliceStation,jdbcType=VARCHAR},
      </if>
      <if test="currentAddress != null">
        current_address = #{currentAddress,jdbcType=VARCHAR},
      </if>
      <if test="officeLocation != null">
        office_location = #{officeLocation,jdbcType=VARCHAR},
      </if>
      <if test="contactNumber != null">
        contact_number = #{contactNumber,jdbcType=INTEGER},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=INTEGER},
      </if>
      <if test="administrativePosition != null">
        administrative_position = #{administrativePosition,jdbcType=VARCHAR},
      </if>
      <if test="technicalPosition != null">
        technical_position = #{technicalPosition,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="secretPosition != null">
        secret_position = #{secretPosition,jdbcType=BIGINT},
      </if>
      <if test="classifiedGrades != null">
        classified_grades = #{classifiedGrades,jdbcType=INTEGER},
      </if>
      <if test="employmentType != null">
        employment_type = #{employmentType,jdbcType=INTEGER},
      </if>
      <if test="personnelCategory != null">
        personnel_category = #{personnelCategory,jdbcType=INTEGER},
      </if>
      <if test="joinTime != null">
        join_time = #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="joinSecretPositionTime != null">
        join_secret_position_time = #{joinSecretPositionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeCardNumber != null">
        employee_card_number = #{employeeCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="confidentialityAllowance != null">
        confidentiality_allowance = #{confidentialityAllowance,jdbcType=DOUBLE},
      </if>
      <if test="personnelStatus != null">
        personnel_status = #{personnelStatus,jdbcType=INTEGER},
      </if>
      <if test="leaveTime != null">
        leave_time = #{leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="declassificationTime != null">
        declassification_time = #{declassificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="badHabits != null">
        bad_habits = #{badHabits,jdbcType=VARCHAR},
      </if>
      <if test="otherSituations != null">
        other_situations = #{otherSituations,jdbcType=VARCHAR},
      </if>
      <if test="promise != null">
        promise = #{promise,jdbcType=BOOLEAN},
      </if>
      <if test="promiseTime != null">
        promise_time = #{promiseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="promiseFileLocation != null">
        promise_file_location = #{promiseFileLocation,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.everyouthtech.oa.secret.orm.pojo.SecretPersonnelInfo">
    update t_secret_personnel_info
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      nation = #{nation,jdbcType=BIGINT},
      former_name = #{formerName,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      image = #{image,jdbcType=VARCHAR},
      marital_status = #{maritalStatus,jdbcType=INTEGER},
      birthplace = #{birthplace,jdbcType=VARCHAR},
      hometown = #{hometown,jdbcType=VARCHAR},
      nationality = #{nationality,jdbcType=BIGINT},
      identity_number = #{identityNumber,jdbcType=VARCHAR},
      political_status = #{politicalStatus,jdbcType=INTEGER},
      join_political_time = #{joinPoliticalTime,jdbcType=TIMESTAMP},
      education_level = #{educationLevel,jdbcType=VARCHAR},
      education = #{education,jdbcType=INTEGER},
      academic_degree = #{academicDegree,jdbcType=INTEGER},
      graduated_school = #{graduatedSchool,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      working_years = #{workingYears,jdbcType=INTEGER},
      language = #{language,jdbcType=VARCHAR},
      language_familiarity = #{languageFamiliarity,jdbcType=VARCHAR},
      registered_residence = #{registeredResidence,jdbcType=VARCHAR},
      registered_residence_police_station = #{registeredResidencePoliceStation,jdbcType=VARCHAR},
      current_address = #{currentAddress,jdbcType=VARCHAR},
      office_location = #{officeLocation,jdbcType=VARCHAR},
      contact_number = #{contactNumber,jdbcType=INTEGER},
      phone_number = #{phoneNumber,jdbcType=INTEGER},
      administrative_position = #{administrativePosition,jdbcType=VARCHAR},
      technical_position = #{technicalPosition,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=BIGINT},
      secret_position = #{secretPosition,jdbcType=BIGINT},
      classified_grades = #{classifiedGrades,jdbcType=INTEGER},
      employment_type = #{employmentType,jdbcType=INTEGER},
      personnel_category = #{personnelCategory,jdbcType=INTEGER},
      join_time = #{joinTime,jdbcType=TIMESTAMP},
      join_secret_position_time = #{joinSecretPositionTime,jdbcType=TIMESTAMP},
      employee_card_number = #{employeeCardNumber,jdbcType=VARCHAR},
      confidentiality_allowance = #{confidentialityAllowance,jdbcType=DOUBLE},
      personnel_status = #{personnelStatus,jdbcType=INTEGER},
      leave_time = #{leaveTime,jdbcType=TIMESTAMP},
      declassification_time = #{declassificationTime,jdbcType=TIMESTAMP},
      bad_habits = #{badHabits,jdbcType=VARCHAR},
      other_situations = #{otherSituations,jdbcType=VARCHAR},
      promise = #{promise,jdbcType=BOOLEAN},
      promise_time = #{promiseTime,jdbcType=TIMESTAMP},
      promise_file_location = #{promiseFileLocation,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.everyouthtech.oa.secret.orm.pojo.SecretPersonnelInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="nation" jdbcType="BIGINT" property="nation" />
    <result column="former_name" jdbcType="VARCHAR" property="formerName" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="marital_status" jdbcType="INTEGER" property="maritalStatus" />
    <result column="birthplace" jdbcType="VARCHAR" property="birthplace" />
    <result column="hometown" jdbcType="VARCHAR" property="hometown" />
    <result column="nationality" jdbcType="BIGINT" property="nationality" />
    <result column="identity_number" jdbcType="VARCHAR" property="identityNumber" />
    <result column="political_status" jdbcType="INTEGER" property="politicalStatus" />
    <result column="join_political_time" jdbcType="TIMESTAMP" property="joinPoliticalTime" />
    <result column="education_level" jdbcType="VARCHAR" property="educationLevel" />
    <result column="education" jdbcType="INTEGER" property="education" />
    <result column="academic_degree" jdbcType="INTEGER" property="academicDegree" />
    <result column="graduated_school" jdbcType="VARCHAR" property="graduatedSchool" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="working_years" jdbcType="INTEGER" property="workingYears" />
    <result column="language" jdbcType="VARCHAR" property="language" />
    <result column="language_familiarity" jdbcType="VARCHAR" property="languageFamiliarity" />
    <result column="registered_residence" jdbcType="VARCHAR" property="registeredResidence" />
    <result column="registered_residence_police_station" jdbcType="VARCHAR" property="registeredResidencePoliceStation" />
    <result column="current_address" jdbcType="VARCHAR" property="currentAddress" />
    <result column="office_location" jdbcType="VARCHAR" property="officeLocation" />
    <result column="contact_number" jdbcType="INTEGER" property="contactNumber" />
    <result column="phone_number" jdbcType="INTEGER" property="phoneNumber" />
    <result column="administrative_position" jdbcType="VARCHAR" property="administrativePosition" />
    <result column="technical_position" jdbcType="VARCHAR" property="technicalPosition" />
    <result column="department_id" jdbcType="BIGINT" property="departmentId" />
    <result column="secret_position" jdbcType="BIGINT" property="secretPosition" />
    <result column="classified_grades" jdbcType="INTEGER" property="classifiedGrades" />
    <result column="employment_type" jdbcType="INTEGER" property="employmentType" />
    <result column="personnel_category" jdbcType="INTEGER" property="personnelCategory" />
    <result column="join_time" jdbcType="TIMESTAMP" property="joinTime" />
    <result column="join_secret_position_time" jdbcType="TIMESTAMP" property="joinSecretPositionTime" />
    <result column="employee_card_number" jdbcType="VARCHAR" property="employeeCardNumber" />
    <result column="confidentiality_allowance" jdbcType="DOUBLE" property="confidentialityAllowance" />
    <result column="personnel_status" jdbcType="INTEGER" property="personnelStatus" />
    <result column="leave_time" jdbcType="TIMESTAMP" property="leaveTime" />
    <result column="declassification_time" jdbcType="TIMESTAMP" property="declassificationTime" />
    <result column="bad_habits" jdbcType="VARCHAR" property="badHabits" />
    <result column="other_situations" jdbcType="VARCHAR" property="otherSituations" />
    <result column="promise" jdbcType="BOOLEAN" property="promise" />
    <result column="promise_time" jdbcType="TIMESTAMP" property="promiseTime" />
    <result column="promise_file_location" jdbcType="VARCHAR" property="promiseFileLocation" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, sex, nation, former_name, birthday, image, marital_status, birthplace, 
    hometown, nationality, identity_number, political_status, join_political_time, education_level, 
    education, academic_degree, graduated_school, major, working_years, language, language_familiarity, 
    registered_residence, registered_residence_police_station, current_address, office_location, 
    contact_number, phone_number, administrative_position, technical_position, department_id, 
    secret_position, classified_grades, employment_type, personnel_category, join_time, 
    join_secret_position_time, employee_card_number, confidentiality_allowance, personnel_status, 
    leave_time, declassification_time, bad_habits, other_situations, promise, promise_time, 
    promise_file_location, remarks, created_time, created_by, update_time, update_by
  </sql>
  <select id="selectByExample" parameterType="com.everyouthtech.oa.secret.orm.pojo.SecretPersonnelInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_secret_personnel_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_secret_personnel_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_secret_personnel_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.everyouthtech.oa.secret.orm.pojo.SecretPersonnelInfoExample">
    delete from t_secret_personnel_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.everyouthtech.oa.secret.orm.pojo.SecretPersonnelInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_secret_personnel_info (name, sex, nation, 
      former_name, birthday, image, 
      marital_status, birthplace, hometown, 
      nationality, identity_number, political_status, 
      join_political_time, education_level, education, 
      academic_degree, graduated_school, major, 
      working_years, language, language_familiarity, 
      registered_residence, registered_residence_police_station, 
      current_address, office_location, contact_number, 
      phone_number, administrative_position, technical_position, 
      department_id, secret_position, classified_grades, 
      employment_type, personnel_category, join_time, 
      join_secret_position_time, employee_card_number, 
      confidentiality_allowance, personnel_status, 
      leave_time, declassification_time, bad_habits, 
      other_situations, promise, promise_time, 
      promise_file_location, remarks, created_time, 
      created_by, update_time, update_by
      )
    values (#{name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{nation,jdbcType=BIGINT}, 
      #{formerName,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, #{image,jdbcType=VARCHAR}, 
      #{maritalStatus,jdbcType=INTEGER}, #{birthplace,jdbcType=VARCHAR}, #{hometown,jdbcType=VARCHAR}, 
      #{nationality,jdbcType=BIGINT}, #{identityNumber,jdbcType=VARCHAR}, #{politicalStatus,jdbcType=INTEGER}, 
      #{joinPoliticalTime,jdbcType=TIMESTAMP}, #{educationLevel,jdbcType=VARCHAR}, #{education,jdbcType=INTEGER}, 
      #{academicDegree,jdbcType=INTEGER}, #{graduatedSchool,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, 
      #{workingYears,jdbcType=INTEGER}, #{language,jdbcType=VARCHAR}, #{languageFamiliarity,jdbcType=VARCHAR}, 
      #{registeredResidence,jdbcType=VARCHAR}, #{registeredResidencePoliceStation,jdbcType=VARCHAR}, 
      #{currentAddress,jdbcType=VARCHAR}, #{officeLocation,jdbcType=VARCHAR}, #{contactNumber,jdbcType=INTEGER}, 
      #{phoneNumber,jdbcType=INTEGER}, #{administrativePosition,jdbcType=VARCHAR}, #{technicalPosition,jdbcType=VARCHAR}, 
      #{departmentId,jdbcType=BIGINT}, #{secretPosition,jdbcType=BIGINT}, #{classifiedGrades,jdbcType=INTEGER}, 
      #{employmentType,jdbcType=INTEGER}, #{personnelCategory,jdbcType=INTEGER}, #{joinTime,jdbcType=TIMESTAMP}, 
      #{joinSecretPositionTime,jdbcType=TIMESTAMP}, #{employeeCardNumber,jdbcType=VARCHAR}, 
      #{confidentialityAllowance,jdbcType=DOUBLE}, #{personnelStatus,jdbcType=INTEGER}, 
      #{leaveTime,jdbcType=TIMESTAMP}, #{declassificationTime,jdbcType=TIMESTAMP}, #{badHabits,jdbcType=VARCHAR}, 
      #{otherSituations,jdbcType=VARCHAR}, #{promise,jdbcType=BOOLEAN}, #{promiseTime,jdbcType=TIMESTAMP}, 
      #{promiseFileLocation,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.everyouthtech.oa.secret.orm.pojo.SecretPersonnelInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_secret_personnel_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="formerName != null">
        former_name,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="maritalStatus != null">
        marital_status,
      </if>
      <if test="birthplace != null">
        birthplace,
      </if>
      <if test="hometown != null">
        hometown,
      </if>
      <if test="nationality != null">
        nationality,
      </if>
      <if test="identityNumber != null">
        identity_number,
      </if>
      <if test="politicalStatus != null">
        political_status,
      </if>
      <if test="joinPoliticalTime != null">
        join_political_time,
      </if>
      <if test="educationLevel != null">
        education_level,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="academicDegree != null">
        academic_degree,
      </if>
      <if test="graduatedSchool != null">
        graduated_school,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="workingYears != null">
        working_years,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="languageFamiliarity != null">
        language_familiarity,
      </if>
      <if test="registeredResidence != null">
        registered_residence,
      </if>
      <if test="registeredResidencePoliceStation != null">
        registered_residence_police_station,
      </if>
      <if test="currentAddress != null">
        current_address,
      </if>
      <if test="officeLocation != null">
        office_location,
      </if>
      <if test="contactNumber != null">
        contact_number,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="administrativePosition != null">
        administrative_position,
      </if>
      <if test="technicalPosition != null">
        technical_position,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="secretPosition != null">
        secret_position,
      </if>
      <if test="classifiedGrades != null">
        classified_grades,
      </if>
      <if test="employmentType != null">
        employment_type,
      </if>
      <if test="personnelCategory != null">
        personnel_category,
      </if>
      <if test="joinTime != null">
        join_time,
      </if>
      <if test="joinSecretPositionTime != null">
        join_secret_position_time,
      </if>
      <if test="employeeCardNumber != null">
        employee_card_number,
      </if>
      <if test="confidentialityAllowance != null">
        confidentiality_allowance,
      </if>
      <if test="personnelStatus != null">
        personnel_status,
      </if>
      <if test="leaveTime != null">
        leave_time,
      </if>
      <if test="declassificationTime != null">
        declassification_time,
      </if>
      <if test="badHabits != null">
        bad_habits,
      </if>
      <if test="otherSituations != null">
        other_situations,
      </if>
      <if test="promise != null">
        promise,
      </if>
      <if test="promiseTime != null">
        promise_time,
      </if>
      <if test="promiseFileLocation != null">
        promise_file_location,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=BIGINT},
      </if>
      <if test="formerName != null">
        #{formerName,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null">
        #{maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="birthplace != null">
        #{birthplace,jdbcType=VARCHAR},
      </if>
      <if test="hometown != null">
        #{hometown,jdbcType=VARCHAR},
      </if>
      <if test="nationality != null">
        #{nationality,jdbcType=BIGINT},
      </if>
      <if test="identityNumber != null">
        #{identityNumber,jdbcType=VARCHAR},
      </if>
      <if test="politicalStatus != null">
        #{politicalStatus,jdbcType=INTEGER},
      </if>
      <if test="joinPoliticalTime != null">
        #{joinPoliticalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="educationLevel != null">
        #{educationLevel,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=INTEGER},
      </if>
      <if test="academicDegree != null">
        #{academicDegree,jdbcType=INTEGER},
      </if>
      <if test="graduatedSchool != null">
        #{graduatedSchool,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="workingYears != null">
        #{workingYears,jdbcType=INTEGER},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="languageFamiliarity != null">
        #{languageFamiliarity,jdbcType=VARCHAR},
      </if>
      <if test="registeredResidence != null">
        #{registeredResidence,jdbcType=VARCHAR},
      </if>
      <if test="registeredResidencePoliceStation != null">
        #{registeredResidencePoliceStation,jdbcType=VARCHAR},
      </if>
      <if test="currentAddress != null">
        #{currentAddress,jdbcType=VARCHAR},
      </if>
      <if test="officeLocation != null">
        #{officeLocation,jdbcType=VARCHAR},
      </if>
      <if test="contactNumber != null">
        #{contactNumber,jdbcType=INTEGER},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=INTEGER},
      </if>
      <if test="administrativePosition != null">
        #{administrativePosition,jdbcType=VARCHAR},
      </if>
      <if test="technicalPosition != null">
        #{technicalPosition,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="secretPosition != null">
        #{secretPosition,jdbcType=BIGINT},
      </if>
      <if test="classifiedGrades != null">
        #{classifiedGrades,jdbcType=INTEGER},
      </if>
      <if test="employmentType != null">
        #{employmentType,jdbcType=INTEGER},
      </if>
      <if test="personnelCategory != null">
        #{personnelCategory,jdbcType=INTEGER},
      </if>
      <if test="joinTime != null">
        #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="joinSecretPositionTime != null">
        #{joinSecretPositionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeCardNumber != null">
        #{employeeCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="confidentialityAllowance != null">
        #{confidentialityAllowance,jdbcType=DOUBLE},
      </if>
      <if test="personnelStatus != null">
        #{personnelStatus,jdbcType=INTEGER},
      </if>
      <if test="leaveTime != null">
        #{leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="declassificationTime != null">
        #{declassificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="badHabits != null">
        #{badHabits,jdbcType=VARCHAR},
      </if>
      <if test="otherSituations != null">
        #{otherSituations,jdbcType=VARCHAR},
      </if>
      <if test="promise != null">
        #{promise,jdbcType=BOOLEAN},
      </if>
      <if test="promiseTime != null">
        #{promiseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="promiseFileLocation != null">
        #{promiseFileLocation,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.everyouthtech.oa.secret.orm.pojo.SecretPersonnelInfoExample" resultType="java.lang.Long">
    select count(*) from t_secret_personnel_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_secret_personnel_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=BIGINT},
      </if>
      <if test="record.formerName != null">
        former_name = #{record.formerName,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.maritalStatus != null">
        marital_status = #{record.maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="record.birthplace != null">
        birthplace = #{record.birthplace,jdbcType=VARCHAR},
      </if>
      <if test="record.hometown != null">
        hometown = #{record.hometown,jdbcType=VARCHAR},
      </if>
      <if test="record.nationality != null">
        nationality = #{record.nationality,jdbcType=BIGINT},
      </if>
      <if test="record.identityNumber != null">
        identity_number = #{record.identityNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.politicalStatus != null">
        political_status = #{record.politicalStatus,jdbcType=INTEGER},
      </if>
      <if test="record.joinPoliticalTime != null">
        join_political_time = #{record.joinPoliticalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.educationLevel != null">
        education_level = #{record.educationLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=INTEGER},
      </if>
      <if test="record.academicDegree != null">
        academic_degree = #{record.academicDegree,jdbcType=INTEGER},
      </if>
      <if test="record.graduatedSchool != null">
        graduated_school = #{record.graduatedSchool,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.workingYears != null">
        working_years = #{record.workingYears,jdbcType=INTEGER},
      </if>
      <if test="record.language != null">
        language = #{record.language,jdbcType=VARCHAR},
      </if>
      <if test="record.languageFamiliarity != null">
        language_familiarity = #{record.languageFamiliarity,jdbcType=VARCHAR},
      </if>
      <if test="record.registeredResidence != null">
        registered_residence = #{record.registeredResidence,jdbcType=VARCHAR},
      </if>
      <if test="record.registeredResidencePoliceStation != null">
        registered_residence_police_station = #{record.registeredResidencePoliceStation,jdbcType=VARCHAR},
      </if>
      <if test="record.currentAddress != null">
        current_address = #{record.currentAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.officeLocation != null">
        office_location = #{record.officeLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.contactNumber != null">
        contact_number = #{record.contactNumber,jdbcType=INTEGER},
      </if>
      <if test="record.phoneNumber != null">
        phone_number = #{record.phoneNumber,jdbcType=INTEGER},
      </if>
      <if test="record.administrativePosition != null">
        administrative_position = #{record.administrativePosition,jdbcType=VARCHAR},
      </if>
      <if test="record.technicalPosition != null">
        technical_position = #{record.technicalPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=BIGINT},
      </if>
      <if test="record.secretPosition != null">
        secret_position = #{record.secretPosition,jdbcType=BIGINT},
      </if>
      <if test="record.classifiedGrades != null">
        classified_grades = #{record.classifiedGrades,jdbcType=INTEGER},
      </if>
      <if test="record.employmentType != null">
        employment_type = #{record.employmentType,jdbcType=INTEGER},
      </if>
      <if test="record.personnelCategory != null">
        personnel_category = #{record.personnelCategory,jdbcType=INTEGER},
      </if>
      <if test="record.joinTime != null">
        join_time = #{record.joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.joinSecretPositionTime != null">
        join_secret_position_time = #{record.joinSecretPositionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.employeeCardNumber != null">
        employee_card_number = #{record.employeeCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.confidentialityAllowance != null">
        confidentiality_allowance = #{record.confidentialityAllowance,jdbcType=DOUBLE},
      </if>
      <if test="record.personnelStatus != null">
        personnel_status = #{record.personnelStatus,jdbcType=INTEGER},
      </if>
      <if test="record.leaveTime != null">
        leave_time = #{record.leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.declassificationTime != null">
        declassification_time = #{record.declassificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.badHabits != null">
        bad_habits = #{record.badHabits,jdbcType=VARCHAR},
      </if>
      <if test="record.otherSituations != null">
        other_situations = #{record.otherSituations,jdbcType=VARCHAR},
      </if>
      <if test="record.promise != null">
        promise = #{record.promise,jdbcType=BOOLEAN},
      </if>
      <if test="record.promiseTime != null">
        promise_time = #{record.promiseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.promiseFileLocation != null">
        promise_file_location = #{record.promiseFileLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_secret_personnel_info
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      nation = #{record.nation,jdbcType=BIGINT},
      former_name = #{record.formerName,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      image = #{record.image,jdbcType=VARCHAR},
      marital_status = #{record.maritalStatus,jdbcType=INTEGER},
      birthplace = #{record.birthplace,jdbcType=VARCHAR},
      hometown = #{record.hometown,jdbcType=VARCHAR},
      nationality = #{record.nationality,jdbcType=BIGINT},
      identity_number = #{record.identityNumber,jdbcType=VARCHAR},
      political_status = #{record.politicalStatus,jdbcType=INTEGER},
      join_political_time = #{record.joinPoliticalTime,jdbcType=TIMESTAMP},
      education_level = #{record.educationLevel,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=INTEGER},
      academic_degree = #{record.academicDegree,jdbcType=INTEGER},
      graduated_school = #{record.graduatedSchool,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      working_years = #{record.workingYears,jdbcType=INTEGER},
      language = #{record.language,jdbcType=VARCHAR},
      language_familiarity = #{record.languageFamiliarity,jdbcType=VARCHAR},
      registered_residence = #{record.registeredResidence,jdbcType=VARCHAR},
      registered_residence_police_station = #{record.registeredResidencePoliceStation,jdbcType=VARCHAR},
      current_address = #{record.currentAddress,jdbcType=VARCHAR},
      office_location = #{record.officeLocation,jdbcType=VARCHAR},
      contact_number = #{record.contactNumber,jdbcType=INTEGER},
      phone_number = #{record.phoneNumber,jdbcType=INTEGER},
      administrative_position = #{record.administrativePosition,jdbcType=VARCHAR},
      technical_position = #{record.technicalPosition,jdbcType=VARCHAR},
      department_id = #{record.departmentId,jdbcType=BIGINT},
      secret_position = #{record.secretPosition,jdbcType=BIGINT},
      classified_grades = #{record.classifiedGrades,jdbcType=INTEGER},
      employment_type = #{record.employmentType,jdbcType=INTEGER},
      personnel_category = #{record.personnelCategory,jdbcType=INTEGER},
      join_time = #{record.joinTime,jdbcType=TIMESTAMP},
      join_secret_position_time = #{record.joinSecretPositionTime,jdbcType=TIMESTAMP},
      employee_card_number = #{record.employeeCardNumber,jdbcType=VARCHAR},
      confidentiality_allowance = #{record.confidentialityAllowance,jdbcType=DOUBLE},
      personnel_status = #{record.personnelStatus,jdbcType=INTEGER},
      leave_time = #{record.leaveTime,jdbcType=TIMESTAMP},
      declassification_time = #{record.declassificationTime,jdbcType=TIMESTAMP},
      bad_habits = #{record.badHabits,jdbcType=VARCHAR},
      other_situations = #{record.otherSituations,jdbcType=VARCHAR},
      promise = #{record.promise,jdbcType=BOOLEAN},
      promise_time = #{record.promiseTime,jdbcType=TIMESTAMP},
      promise_file_location = #{record.promiseFileLocation,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.everyouthtech.oa.secret.orm.pojo.SecretPersonnelInfo">
    update t_secret_personnel_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=BIGINT},
      </if>
      <if test="formerName != null">
        former_name = #{formerName,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null">
        marital_status = #{maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="birthplace != null">
        birthplace = #{birthplace,jdbcType=VARCHAR},
      </if>
      <if test="hometown != null">
        hometown = #{hometown,jdbcType=VARCHAR},
      </if>
      <if test="nationality != null">
        nationality = #{nationality,jdbcType=BIGINT},
      </if>
      <if test="identityNumber != null">
        identity_number = #{identityNumber,jdbcType=VARCHAR},
      </if>
      <if test="politicalStatus != null">
        political_status = #{politicalStatus,jdbcType=INTEGER},
      </if>
      <if test="joinPoliticalTime != null">
        join_political_time = #{joinPoliticalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="educationLevel != null">
        education_level = #{educationLevel,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=INTEGER},
      </if>
      <if test="academicDegree != null">
        academic_degree = #{academicDegree,jdbcType=INTEGER},
      </if>
      <if test="graduatedSchool != null">
        graduated_school = #{graduatedSchool,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="workingYears != null">
        working_years = #{workingYears,jdbcType=INTEGER},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=VARCHAR},
      </if>
      <if test="languageFamiliarity != null">
        language_familiarity = #{languageFamiliarity,jdbcType=VARCHAR},
      </if>
      <if test="registeredResidence != null">
        registered_residence = #{registeredResidence,jdbcType=VARCHAR},
      </if>
      <if test="registeredResidencePoliceStation != null">
        registered_residence_police_station = #{registeredResidencePoliceStation,jdbcType=VARCHAR},
      </if>
      <if test="currentAddress != null">
        current_address = #{currentAddress,jdbcType=VARCHAR},
      </if>
      <if test="officeLocation != null">
        office_location = #{officeLocation,jdbcType=VARCHAR},
      </if>
      <if test="contactNumber != null">
        contact_number = #{contactNumber,jdbcType=INTEGER},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=INTEGER},
      </if>
      <if test="administrativePosition != null">
        administrative_position = #{administrativePosition,jdbcType=VARCHAR},
      </if>
      <if test="technicalPosition != null">
        technical_position = #{technicalPosition,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="secretPosition != null">
        secret_position = #{secretPosition,jdbcType=BIGINT},
      </if>
      <if test="classifiedGrades != null">
        classified_grades = #{classifiedGrades,jdbcType=INTEGER},
      </if>
      <if test="employmentType != null">
        employment_type = #{employmentType,jdbcType=INTEGER},
      </if>
      <if test="personnelCategory != null">
        personnel_category = #{personnelCategory,jdbcType=INTEGER},
      </if>
      <if test="joinTime != null">
        join_time = #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="joinSecretPositionTime != null">
        join_secret_position_time = #{joinSecretPositionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeCardNumber != null">
        employee_card_number = #{employeeCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="confidentialityAllowance != null">
        confidentiality_allowance = #{confidentialityAllowance,jdbcType=DOUBLE},
      </if>
      <if test="personnelStatus != null">
        personnel_status = #{personnelStatus,jdbcType=INTEGER},
      </if>
      <if test="leaveTime != null">
        leave_time = #{leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="declassificationTime != null">
        declassification_time = #{declassificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="badHabits != null">
        bad_habits = #{badHabits,jdbcType=VARCHAR},
      </if>
      <if test="otherSituations != null">
        other_situations = #{otherSituations,jdbcType=VARCHAR},
      </if>
      <if test="promise != null">
        promise = #{promise,jdbcType=BOOLEAN},
      </if>
      <if test="promiseTime != null">
        promise_time = #{promiseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="promiseFileLocation != null">
        promise_file_location = #{promiseFileLocation,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.everyouthtech.oa.secret.orm.pojo.SecretPersonnelInfo">
    update t_secret_personnel_info
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      nation = #{nation,jdbcType=BIGINT},
      former_name = #{formerName,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      image = #{image,jdbcType=VARCHAR},
      marital_status = #{maritalStatus,jdbcType=INTEGER},
      birthplace = #{birthplace,jdbcType=VARCHAR},
      hometown = #{hometown,jdbcType=VARCHAR},
      nationality = #{nationality,jdbcType=BIGINT},
      identity_number = #{identityNumber,jdbcType=VARCHAR},
      political_status = #{politicalStatus,jdbcType=INTEGER},
      join_political_time = #{joinPoliticalTime,jdbcType=TIMESTAMP},
      education_level = #{educationLevel,jdbcType=VARCHAR},
      education = #{education,jdbcType=INTEGER},
      academic_degree = #{academicDegree,jdbcType=INTEGER},
      graduated_school = #{graduatedSchool,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      working_years = #{workingYears,jdbcType=INTEGER},
      language = #{language,jdbcType=VARCHAR},
      language_familiarity = #{languageFamiliarity,jdbcType=VARCHAR},
      registered_residence = #{registeredResidence,jdbcType=VARCHAR},
      registered_residence_police_station = #{registeredResidencePoliceStation,jdbcType=VARCHAR},
      current_address = #{currentAddress,jdbcType=VARCHAR},
      office_location = #{officeLocation,jdbcType=VARCHAR},
      contact_number = #{contactNumber,jdbcType=INTEGER},
      phone_number = #{phoneNumber,jdbcType=INTEGER},
      administrative_position = #{administrativePosition,jdbcType=VARCHAR},
      technical_position = #{technicalPosition,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=BIGINT},
      secret_position = #{secretPosition,jdbcType=BIGINT},
      classified_grades = #{classifiedGrades,jdbcType=INTEGER},
      employment_type = #{employmentType,jdbcType=INTEGER},
      personnel_category = #{personnelCategory,jdbcType=INTEGER},
      join_time = #{joinTime,jdbcType=TIMESTAMP},
      join_secret_position_time = #{joinSecretPositionTime,jdbcType=TIMESTAMP},
      employee_card_number = #{employeeCardNumber,jdbcType=VARCHAR},
      confidentiality_allowance = #{confidentialityAllowance,jdbcType=DOUBLE},
      personnel_status = #{personnelStatus,jdbcType=INTEGER},
      leave_time = #{leaveTime,jdbcType=TIMESTAMP},
      declassification_time = #{declassificationTime,jdbcType=TIMESTAMP},
      bad_habits = #{badHabits,jdbcType=VARCHAR},
      other_situations = #{otherSituations,jdbcType=VARCHAR},
      promise = #{promise,jdbcType=BOOLEAN},
      promise_time = #{promiseTime,jdbcType=TIMESTAMP},
      promise_file_location = #{promiseFileLocation,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>